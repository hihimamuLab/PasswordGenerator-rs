{"$message_type":"diagnostic","message":"associated constant `SYMBOL` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/password_generator/pool.rs","byte_start":1767,"byte_end":1776,"line_start":20,"line_end":20,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"impl Pool {","highlight_start":1,"highlight_end":10}],"label":"associated constant in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/password_generator/pool.rs","byte_start":1895,"byte_end":1901,"line_start":23,"line_end":23,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"    pub const SYMBOL: Self = Pool { value: 4 };","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: associated constant `SYMBOL` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/password_generator/pool.rs:23:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Pool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12massociated constant in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const SYMBOL: Self = Pool { value: 4 };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variants `SHA3512` and `Whirlpool` are never constructed","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src/password_generator/method.rs","byte_start":1708,"byte_end":1714,"line_start":14,"line_end":14,"column_start":10,"column_end":16,"is_primary":false,"text":[{"text":"pub enum Method {","highlight_start":10,"highlight_end":16}],"label":"variants in this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/password_generator/method.rs","byte_start":1734,"byte_end":1741,"line_start":16,"line_end":16,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    SHA3512,","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/password_generator/method.rs","byte_start":1774,"byte_end":1783,"line_start":19,"line_end":19,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    Whirlpool","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`Method` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variants `SHA3512` and `Whirlpool` are never constructed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/password_generator/method.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Method {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mvariants in this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SHA2512,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    SHA3512,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Whirlpool\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `Method` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"module has the same name as its containing module","code":{"code":"clippy::module_inception","explanation":null},"level":"warning","spans":[{"file_name":"src/tests.rs","byte_start":1675,"byte_end":3863,"line_start":14,"line_end":88,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"mod tests {","highlight_start":1,"highlight_end":12},{"text":"    use crate::password_generator::{","highlight_start":1,"highlight_end":37},{"text":"        method::{Method}, pool::Pool, PasswordGenerator","highlight_start":1,"highlight_end":56},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn pwgen_new_test() {","highlight_start":1,"highlight_end":26},{"text":"        let pwgen_new: PasswordGenerator = PasswordGenerator::new();","highlight_start":1,"highlight_end":69},{"text":"        assert_eq!(","highlight_start":1,"highlight_end":20},{"text":"            pwgen_new,","highlight_start":1,"highlight_end":23},{"text":"            PasswordGenerator {","highlight_start":1,"highlight_end":32},{"text":"                pool: Pool::UPPERCASE | Pool::LOWERCASE,","highlight_start":1,"highlight_end":57},{"text":"                method: Method::BLAKE3,","highlight_start":1,"highlight_end":40},{"text":"                disable_str: \"\".to_string(),","highlight_start":1,"highlight_end":45},{"text":"                length: 8,","highlight_start":1,"highlight_end":27},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn pwgen_pool_test() {","highlight_start":1,"highlight_end":27},{"text":"        let pwgen_pool: PasswordGenerator = PasswordGenerator::new()","highlight_start":1,"highlight_end":69},{"text":"            .pool(Pool::UPPERCASE);","highlight_start":1,"highlight_end":36},{"text":"        assert_eq!(","highlight_start":1,"highlight_end":20},{"text":"            pwgen_pool,","highlight_start":1,"highlight_end":24},{"text":"            PasswordGenerator {","highlight_start":1,"highlight_end":32},{"text":"                pool: Pool::UPPERCASE,","highlight_start":1,"highlight_end":39},{"text":"                method: Method::BLAKE3,","highlight_start":1,"highlight_end":40},{"text":"                disable_str: \"\".to_string(),","highlight_start":1,"highlight_end":45},{"text":"                length: 8","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn pwgen_method_test() {","highlight_start":1,"highlight_end":29},{"text":"        let pwgen_method: PasswordGenerator = PasswordGenerator::new()","highlight_start":1,"highlight_end":71},{"text":"            .method(Method::SHA2512);","highlight_start":1,"highlight_end":38},{"text":"        assert_eq!(","highlight_start":1,"highlight_end":20},{"text":"            pwgen_method,","highlight_start":1,"highlight_end":26},{"text":"            PasswordGenerator {","highlight_start":1,"highlight_end":32},{"text":"                pool: Pool::UPPERCASE | Pool::LOWERCASE,","highlight_start":1,"highlight_end":57},{"text":"                method: Method::SHA2512,","highlight_start":1,"highlight_end":41},{"text":"                disable_str: \"\".to_string(),","highlight_start":1,"highlight_end":45},{"text":"                length: 8","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn pwgen_disable_str_test() {","highlight_start":1,"highlight_end":34},{"text":"        let pwgen_disable_str: PasswordGenerator = PasswordGenerator::new()","highlight_start":1,"highlight_end":76},{"text":"            .disable_str(\"abc\".to_string());","highlight_start":1,"highlight_end":45},{"text":"        assert_eq!(","highlight_start":1,"highlight_end":20},{"text":"            pwgen_disable_str,","highlight_start":1,"highlight_end":31},{"text":"            PasswordGenerator {","highlight_start":1,"highlight_end":32},{"text":"                pool: Pool::UPPERCASE | Pool::LOWERCASE,","highlight_start":1,"highlight_end":57},{"text":"                method: Method::BLAKE3,","highlight_start":1,"highlight_end":40},{"text":"                disable_str: \"abc\".to_string(),","highlight_start":1,"highlight_end":48},{"text":"                length: 8","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"    #[test]","highlight_start":1,"highlight_end":12},{"text":"    fn pwgen_length_test() {","highlight_start":1,"highlight_end":29},{"text":"        let pwgen_length: PasswordGenerator = PasswordGenerator::new()","highlight_start":1,"highlight_end":71},{"text":"            .length(16);","highlight_start":1,"highlight_end":25},{"text":"        assert_eq!(","highlight_start":1,"highlight_end":20},{"text":"            pwgen_length,","highlight_start":1,"highlight_end":26},{"text":"            PasswordGenerator {","highlight_start":1,"highlight_end":32},{"text":"                pool: Pool::UPPERCASE | Pool::LOWERCASE,","highlight_start":1,"highlight_end":57},{"text":"                method: Method::BLAKE3,","highlight_start":1,"highlight_end":40},{"text":"                disable_str: \"\".to_string(),","highlight_start":1,"highlight_end":45},{"text":"                length: 16","highlight_start":1,"highlight_end":27},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        )","highlight_start":1,"highlight_end":10},{"text":"    } ","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::module_inception)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: module has the same name as its containing module\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/tests.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mmod tests {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use crate::password_generator::{\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        method::{Method}, pool::Pool, PasswordGenerator\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m87\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m88\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_inception\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::module_inception)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"3 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 3 warnings emitted\u001b[0m\n\n"}
